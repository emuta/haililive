// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.2
// source: protobuf/haililive/haililive.proto

package haililive

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CreateReportV3Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MarketId  int32                `protobuf:"varint,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Code      string               `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Name      string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Open      float32              `protobuf:"fixed32,5,opt,name=open,proto3" json:"open,omitempty"`
	Close     float32              `protobuf:"fixed32,6,opt,name=close,proto3" json:"close,omitempty"`
	High      float32              `protobuf:"fixed32,7,opt,name=high,proto3" json:"high,omitempty"`
	Low       float32              `protobuf:"fixed32,8,opt,name=low,proto3" json:"low,omitempty"`
	Last      float32              `protobuf:"fixed32,9,opt,name=last,proto3" json:"last,omitempty"` // 最新价
	Volume    float32              `protobuf:"fixed32,10,opt,name=volume,proto3" json:"volume,omitempty"`
	Amount    float32              `protobuf:"fixed32,11,opt,name=amount,proto3" json:"amount,omitempty"`
	// 五档买卖行情
	BuyPrice   []float32 `protobuf:"fixed32,12,rep,packed,name=buy_price,json=buyPrice,proto3" json:"buy_price,omitempty"`
	BuyVolume  []float32 `protobuf:"fixed32,13,rep,packed,name=buy_volume,json=buyVolume,proto3" json:"buy_volume,omitempty"`
	SellPrice  []float32 `protobuf:"fixed32,14,rep,packed,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`
	SellVolume []float32 `protobuf:"fixed32,15,rep,packed,name=sell_volume,json=sellVolume,proto3" json:"sell_volume,omitempty"`
}

func (x *CreateReportV3Request) Reset() {
	*x = CreateReportV3Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReportV3Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReportV3Request) ProtoMessage() {}

func (x *CreateReportV3Request) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReportV3Request.ProtoReflect.Descriptor instead.
func (*CreateReportV3Request) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{1}
}

func (x *CreateReportV3Request) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CreateReportV3Request) GetMarketId() int32 {
	if x != nil {
		return x.MarketId
	}
	return 0
}

func (x *CreateReportV3Request) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateReportV3Request) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateReportV3Request) GetOpen() float32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *CreateReportV3Request) GetClose() float32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *CreateReportV3Request) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *CreateReportV3Request) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *CreateReportV3Request) GetLast() float32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *CreateReportV3Request) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *CreateReportV3Request) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateReportV3Request) GetBuyPrice() []float32 {
	if x != nil {
		return x.BuyPrice
	}
	return nil
}

func (x *CreateReportV3Request) GetBuyVolume() []float32 {
	if x != nil {
		return x.BuyVolume
	}
	return nil
}

func (x *CreateReportV3Request) GetSellPrice() []float32 {
	if x != nil {
		return x.SellPrice
	}
	return nil
}

func (x *CreateReportV3Request) GetSellVolume() []float32 {
	if x != nil {
		return x.SellVolume
	}
	return nil
}

type CreateTickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MarketId  int32                `protobuf:"varint,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Code      string               `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Open      float32              `protobuf:"fixed32,4,opt,name=open,proto3" json:"open,omitempty"`   // 今开
	Close     float32              `protobuf:"fixed32,5,opt,name=close,proto3" json:"close,omitempty"` // 昨收
	High      float32              `protobuf:"fixed32,6,opt,name=high,proto3" json:"high,omitempty"`   // 最高
	Low       float32              `protobuf:"fixed32,7,opt,name=low,proto3" json:"low,omitempty"`     // 最低
	Last      float32              `protobuf:"fixed32,8,opt,name=last,proto3" json:"last,omitempty"`   // 最新价
	// 五档买卖行情
	BuyPrice   []float32 `protobuf:"fixed32,9,rep,packed,name=buy_price,json=buyPrice,proto3" json:"buy_price,omitempty"`
	BuyVolume  []float32 `protobuf:"fixed32,10,rep,packed,name=buy_volume,json=buyVolume,proto3" json:"buy_volume,omitempty"`
	SellPrice  []float32 `protobuf:"fixed32,11,rep,packed,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`
	SellVolume []float32 `protobuf:"fixed32,12,rep,packed,name=sell_volume,json=sellVolume,proto3" json:"sell_volume,omitempty"`
}

func (x *CreateTickRequest) Reset() {
	*x = CreateTickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTickRequest) ProtoMessage() {}

func (x *CreateTickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTickRequest.ProtoReflect.Descriptor instead.
func (*CreateTickRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTickRequest) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CreateTickRequest) GetMarketId() int32 {
	if x != nil {
		return x.MarketId
	}
	return 0
}

func (x *CreateTickRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateTickRequest) GetOpen() float32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *CreateTickRequest) GetClose() float32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *CreateTickRequest) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *CreateTickRequest) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *CreateTickRequest) GetLast() float32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *CreateTickRequest) GetBuyPrice() []float32 {
	if x != nil {
		return x.BuyPrice
	}
	return nil
}

func (x *CreateTickRequest) GetBuyVolume() []float32 {
	if x != nil {
		return x.BuyVolume
	}
	return nil
}

func (x *CreateTickRequest) GetSellPrice() []float32 {
	if x != nil {
		return x.SellPrice
	}
	return nil
}

func (x *CreateTickRequest) GetSellVolume() []float32 {
	if x != nil {
		return x.SellVolume
	}
	return nil
}

type CreateMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MarketId int32  `protobuf:"varint,3,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Date     int32  `protobuf:"varint,4,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *CreateMarketRequest) Reset() {
	*x = CreateMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMarketRequest) ProtoMessage() {}

func (x *CreateMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMarketRequest.ProtoReflect.Descriptor instead.
func (*CreateMarketRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMarketRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateMarketRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMarketRequest) GetMarketId() int32 {
	if x != nil {
		return x.MarketId
	}
	return 0
}

func (x *CreateMarketRequest) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

type CreateFinanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market int32  `protobuf:"varint,1,opt,name=market,proto3" json:"market,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	BGRQ   int64  `protobuf:"varint,3,opt,name=BGRQ,proto3" json:"BGRQ,omitempty"` // 财务数据的日期 如半年报 季报等 如 20090630 表示 2009年半年报
	// map<string, float> attr = 4;
	ZGB     float32 `protobuf:"fixed32,4,opt,name=ZGB,proto3" json:"ZGB,omitempty"`          // 总股本
	GJG     float32 `protobuf:"fixed32,5,opt,name=GJG,proto3" json:"GJG,omitempty"`          // 国家股
	FQFRG   float32 `protobuf:"fixed32,6,opt,name=FQFRG,proto3" json:"FQFRG,omitempty"`      // 发起人法人股
	FRG     float32 `protobuf:"fixed32,7,opt,name=FRG,proto3" json:"FRG,omitempty"`          // 法人股
	BGS     float32 `protobuf:"fixed32,8,opt,name=BGS,proto3" json:"BGS,omitempty"`          // B股
	HGS     float32 `protobuf:"fixed32,9,opt,name=HGS,proto3" json:"HGS,omitempty"`          // H股
	MQLT    float32 `protobuf:"fixed32,10,opt,name=MQLT,proto3" json:"MQLT,omitempty"`       // 目前流通
	ZGG     float32 `protobuf:"fixed32,11,opt,name=ZGG,proto3" json:"ZGG,omitempty"`         // 职工股
	A2ZPG   float32 `protobuf:"fixed32,12,opt,name=A2ZPG,proto3" json:"A2ZPG,omitempty"`     // A2转配股
	ZZC     float32 `protobuf:"fixed32,13,opt,name=ZZC,proto3" json:"ZZC,omitempty"`         // 总资产(千元)
	LDZC    float32 `protobuf:"fixed32,14,opt,name=LDZC,proto3" json:"LDZC,omitempty"`       // 流动资产
	GDZC    float32 `protobuf:"fixed32,15,opt,name=GDZC,proto3" json:"GDZC,omitempty"`       // 固定资产
	WXZC    float32 `protobuf:"fixed32,16,opt,name=WXZC,proto3" json:"WXZC,omitempty"`       // 无形资产
	CQTZ    float32 `protobuf:"fixed32,17,opt,name=CQTZ,proto3" json:"CQTZ,omitempty"`       // 长期投资
	LDFZ    float32 `protobuf:"fixed32,18,opt,name=LDFZ,proto3" json:"LDFZ,omitempty"`       // 流动负债
	CQFZ    float32 `protobuf:"fixed32,19,opt,name=CQFZ,proto3" json:"CQFZ,omitempty"`       // 长期负债
	ZBGJJ   float32 `protobuf:"fixed32,20,opt,name=ZBGJJ,proto3" json:"ZBGJJ,omitempty"`     // 资本公积金
	MGGJJ   float32 `protobuf:"fixed32,21,opt,name=MGGJJ,proto3" json:"MGGJJ,omitempty"`     // 每股公积金
	GDQY    float32 `protobuf:"fixed32,22,opt,name=GDQY,proto3" json:"GDQY,omitempty"`       // 股东权益
	ZYSR    float32 `protobuf:"fixed32,23,opt,name=ZYSR,proto3" json:"ZYSR,omitempty"`       // 主营收入
	ZYLR    float32 `protobuf:"fixed32,24,opt,name=ZYLR,proto3" json:"ZYLR,omitempty"`       // 主营利润
	QTLR    float32 `protobuf:"fixed32,25,opt,name=QTLR,proto3" json:"QTLR,omitempty"`       // 其他利润
	YYLR    float32 `protobuf:"fixed32,26,opt,name=YYLR,proto3" json:"YYLR,omitempty"`       // 营业利润
	TZSY    float32 `protobuf:"fixed32,27,opt,name=TZSY,proto3" json:"TZSY,omitempty"`       // 投资收益
	BTSR    float32 `protobuf:"fixed32,28,opt,name=BTSR,proto3" json:"BTSR,omitempty"`       // 补贴收入
	YYWSZ   float32 `protobuf:"fixed32,29,opt,name=YYWSZ,proto3" json:"YYWSZ,omitempty"`     // 营业外收支
	SNSYTZ  float32 `protobuf:"fixed32,30,opt,name=SNSYTZ,proto3" json:"SNSYTZ,omitempty"`   // 上年损益调整
	LRZE    float32 `protobuf:"fixed32,31,opt,name=LRZE,proto3" json:"LRZE,omitempty"`       // 利润总额
	SHLR    float32 `protobuf:"fixed32,32,opt,name=SHLR,proto3" json:"SHLR,omitempty"`       // 税后利润
	JLR     float32 `protobuf:"fixed32,33,opt,name=JLR,proto3" json:"JLR,omitempty"`         // 净利润
	WFPLR   float32 `protobuf:"fixed32,34,opt,name=WFPLR,proto3" json:"WFPLR,omitempty"`     // 未分配利润
	MGWFP   float32 `protobuf:"fixed32,35,opt,name=MGWFP,proto3" json:"MGWFP,omitempty"`     // 每股未分配
	MGSY    float32 `protobuf:"fixed32,36,opt,name=MGSY,proto3" json:"MGSY,omitempty"`       // 每股收益
	MGJZC   float32 `protobuf:"fixed32,37,opt,name=MGJZC,proto3" json:"MGJZC,omitempty"`     // 每股净资产
	TZMGJZC float32 `protobuf:"fixed32,38,opt,name=TZMGJZC,proto3" json:"TZMGJZC,omitempty"` // 调整每股净资产
	GDQYB   float32 `protobuf:"fixed32,39,opt,name=GDQYB,proto3" json:"GDQYB,omitempty"`     // 股东权益比
	JZCSYL  float32 `protobuf:"fixed32,40,opt,name=JZCSYL,proto3" json:"JZCSYL,omitempty"`   // 净资收益率
}

func (x *CreateFinanceRequest) Reset() {
	*x = CreateFinanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFinanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFinanceRequest) ProtoMessage() {}

func (x *CreateFinanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFinanceRequest.ProtoReflect.Descriptor instead.
func (*CreateFinanceRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{4}
}

func (x *CreateFinanceRequest) GetMarket() int32 {
	if x != nil {
		return x.Market
	}
	return 0
}

func (x *CreateFinanceRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateFinanceRequest) GetBGRQ() int64 {
	if x != nil {
		return x.BGRQ
	}
	return 0
}

func (x *CreateFinanceRequest) GetZGB() float32 {
	if x != nil {
		return x.ZGB
	}
	return 0
}

func (x *CreateFinanceRequest) GetGJG() float32 {
	if x != nil {
		return x.GJG
	}
	return 0
}

func (x *CreateFinanceRequest) GetFQFRG() float32 {
	if x != nil {
		return x.FQFRG
	}
	return 0
}

func (x *CreateFinanceRequest) GetFRG() float32 {
	if x != nil {
		return x.FRG
	}
	return 0
}

func (x *CreateFinanceRequest) GetBGS() float32 {
	if x != nil {
		return x.BGS
	}
	return 0
}

func (x *CreateFinanceRequest) GetHGS() float32 {
	if x != nil {
		return x.HGS
	}
	return 0
}

func (x *CreateFinanceRequest) GetMQLT() float32 {
	if x != nil {
		return x.MQLT
	}
	return 0
}

func (x *CreateFinanceRequest) GetZGG() float32 {
	if x != nil {
		return x.ZGG
	}
	return 0
}

func (x *CreateFinanceRequest) GetA2ZPG() float32 {
	if x != nil {
		return x.A2ZPG
	}
	return 0
}

func (x *CreateFinanceRequest) GetZZC() float32 {
	if x != nil {
		return x.ZZC
	}
	return 0
}

func (x *CreateFinanceRequest) GetLDZC() float32 {
	if x != nil {
		return x.LDZC
	}
	return 0
}

func (x *CreateFinanceRequest) GetGDZC() float32 {
	if x != nil {
		return x.GDZC
	}
	return 0
}

func (x *CreateFinanceRequest) GetWXZC() float32 {
	if x != nil {
		return x.WXZC
	}
	return 0
}

func (x *CreateFinanceRequest) GetCQTZ() float32 {
	if x != nil {
		return x.CQTZ
	}
	return 0
}

func (x *CreateFinanceRequest) GetLDFZ() float32 {
	if x != nil {
		return x.LDFZ
	}
	return 0
}

func (x *CreateFinanceRequest) GetCQFZ() float32 {
	if x != nil {
		return x.CQFZ
	}
	return 0
}

func (x *CreateFinanceRequest) GetZBGJJ() float32 {
	if x != nil {
		return x.ZBGJJ
	}
	return 0
}

func (x *CreateFinanceRequest) GetMGGJJ() float32 {
	if x != nil {
		return x.MGGJJ
	}
	return 0
}

func (x *CreateFinanceRequest) GetGDQY() float32 {
	if x != nil {
		return x.GDQY
	}
	return 0
}

func (x *CreateFinanceRequest) GetZYSR() float32 {
	if x != nil {
		return x.ZYSR
	}
	return 0
}

func (x *CreateFinanceRequest) GetZYLR() float32 {
	if x != nil {
		return x.ZYLR
	}
	return 0
}

func (x *CreateFinanceRequest) GetQTLR() float32 {
	if x != nil {
		return x.QTLR
	}
	return 0
}

func (x *CreateFinanceRequest) GetYYLR() float32 {
	if x != nil {
		return x.YYLR
	}
	return 0
}

func (x *CreateFinanceRequest) GetTZSY() float32 {
	if x != nil {
		return x.TZSY
	}
	return 0
}

func (x *CreateFinanceRequest) GetBTSR() float32 {
	if x != nil {
		return x.BTSR
	}
	return 0
}

func (x *CreateFinanceRequest) GetYYWSZ() float32 {
	if x != nil {
		return x.YYWSZ
	}
	return 0
}

func (x *CreateFinanceRequest) GetSNSYTZ() float32 {
	if x != nil {
		return x.SNSYTZ
	}
	return 0
}

func (x *CreateFinanceRequest) GetLRZE() float32 {
	if x != nil {
		return x.LRZE
	}
	return 0
}

func (x *CreateFinanceRequest) GetSHLR() float32 {
	if x != nil {
		return x.SHLR
	}
	return 0
}

func (x *CreateFinanceRequest) GetJLR() float32 {
	if x != nil {
		return x.JLR
	}
	return 0
}

func (x *CreateFinanceRequest) GetWFPLR() float32 {
	if x != nil {
		return x.WFPLR
	}
	return 0
}

func (x *CreateFinanceRequest) GetMGWFP() float32 {
	if x != nil {
		return x.MGWFP
	}
	return 0
}

func (x *CreateFinanceRequest) GetMGSY() float32 {
	if x != nil {
		return x.MGSY
	}
	return 0
}

func (x *CreateFinanceRequest) GetMGJZC() float32 {
	if x != nil {
		return x.MGJZC
	}
	return 0
}

func (x *CreateFinanceRequest) GetTZMGJZC() float32 {
	if x != nil {
		return x.TZMGJZC
	}
	return 0
}

func (x *CreateFinanceRequest) GetGDQYB() float32 {
	if x != nil {
		return x.GDQYB
	}
	return 0
}

func (x *CreateFinanceRequest) GetJZCSYL() float32 {
	if x != nil {
		return x.JZCSYL
	}
	return 0
}

type CreateFileHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string               `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Open      float32              `protobuf:"fixed32,3,opt,name=open,proto3" json:"open,omitempty"`
	Close     float32              `protobuf:"fixed32,4,opt,name=close,proto3" json:"close,omitempty"`
	High      float32              `protobuf:"fixed32,5,opt,name=high,proto3" json:"high,omitempty"`
	Low       float32              `protobuf:"fixed32,6,opt,name=low,proto3" json:"low,omitempty"`
	Volume    float32              `protobuf:"fixed32,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Amount    float32              `protobuf:"fixed32,8,opt,name=amount,proto3" json:"amount,omitempty"`
	Advance   float32              `protobuf:"fixed32,9,opt,name=advance,proto3" json:"advance,omitempty"`
	Decline   float32              `protobuf:"fixed32,10,opt,name=decline,proto3" json:"decline,omitempty"`
}

func (x *CreateFileHistoryRequest) Reset() {
	*x = CreateFileHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFileHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileHistoryRequest) ProtoMessage() {}

func (x *CreateFileHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileHistoryRequest.ProtoReflect.Descriptor instead.
func (*CreateFileHistoryRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{5}
}

func (x *CreateFileHistoryRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateFileHistoryRequest) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CreateFileHistoryRequest) GetOpen() float32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *CreateFileHistoryRequest) GetClose() float32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *CreateFileHistoryRequest) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *CreateFileHistoryRequest) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *CreateFileHistoryRequest) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *CreateFileHistoryRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateFileHistoryRequest) GetAdvance() float32 {
	if x != nil {
		return x.Advance
	}
	return 0
}

func (x *CreateFileHistoryRequest) GetDecline() float32 {
	if x != nil {
		return x.Decline
	}
	return 0
}

type CreateFileMinuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string               `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Price     float32              `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Volume    float32              `protobuf:"fixed32,4,opt,name=volume,proto3" json:"volume,omitempty"`
	Amount    float32              `protobuf:"fixed32,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CreateFileMinuteRequest) Reset() {
	*x = CreateFileMinuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFileMinuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileMinuteRequest) ProtoMessage() {}

func (x *CreateFileMinuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileMinuteRequest.ProtoReflect.Descriptor instead.
func (*CreateFileMinuteRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{6}
}

func (x *CreateFileMinuteRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateFileMinuteRequest) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CreateFileMinuteRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateFileMinuteRequest) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *CreateFileMinuteRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CreateFileHISMinuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code             string               `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Timestamp        *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Open             float32              `protobuf:"fixed32,3,opt,name=open,proto3" json:"open,omitempty"`
	Close            float32              `protobuf:"fixed32,4,opt,name=close,proto3" json:"close,omitempty"`
	High             float32              `protobuf:"fixed32,5,opt,name=high,proto3" json:"high,omitempty"`
	Low              float32              `protobuf:"fixed32,6,opt,name=low,proto3" json:"low,omitempty"`
	Volume           float32              `protobuf:"fixed32,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Amount           float32              `protobuf:"fixed32,8,opt,name=amount,proto3" json:"amount,omitempty"`
	ActivedBuyVolume float32              `protobuf:"fixed32,9,opt,name=actived_buy_volume,json=activedBuyVolume,proto3" json:"actived_buy_volume,omitempty"`
}

func (x *CreateFileHISMinuteRequest) Reset() {
	*x = CreateFileHISMinuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFileHISMinuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileHISMinuteRequest) ProtoMessage() {}

func (x *CreateFileHISMinuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileHISMinuteRequest.ProtoReflect.Descriptor instead.
func (*CreateFileHISMinuteRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{7}
}

func (x *CreateFileHISMinuteRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateFileHISMinuteRequest) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CreateFileHISMinuteRequest) GetOpen() float32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *CreateFileHISMinuteRequest) GetClose() float32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *CreateFileHISMinuteRequest) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *CreateFileHISMinuteRequest) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *CreateFileHISMinuteRequest) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *CreateFileHISMinuteRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateFileHISMinuteRequest) GetActivedBuyVolume() float32 {
	if x != nil {
		return x.ActivedBuyVolume
	}
	return 0
}

type CreateFilePowerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string               `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Give      float32              `protobuf:"fixed32,3,opt,name=give,proto3" json:"give,omitempty"`     // 每股送股
	Price     float32              `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`   // 配股价
	Volume    float32              `protobuf:"fixed32,5,opt,name=volume,proto3" json:"volume,omitempty"` // 每股配股
	Profit    float32              `protobuf:"fixed32,6,opt,name=profit,proto3" json:"profit,omitempty"` // 每股红利
}

func (x *CreateFilePowerRequest) Reset() {
	*x = CreateFilePowerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFilePowerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFilePowerRequest) ProtoMessage() {}

func (x *CreateFilePowerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFilePowerRequest.ProtoReflect.Descriptor instead.
func (*CreateFilePowerRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{8}
}

func (x *CreateFilePowerRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateFilePowerRequest) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CreateFilePowerRequest) GetGive() float32 {
	if x != nil {
		return x.Give
	}
	return 0
}

func (x *CreateFilePowerRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateFilePowerRequest) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *CreateFilePowerRequest) GetProfit() float32 {
	if x != nil {
		return x.Profit
	}
	return 0
}

type CreateFileBaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attrib   int64  `protobuf:"varint,1,opt,name=attrib,proto3" json:"attrib,omitempty"`
	Length   int64  `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	SerialNo int64  `protobuf:"varint,3,opt,name=serial_no,json=serialNo,proto3" json:"serial_no,omitempty"`
	FileName string `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *CreateFileBaseRequest) Reset() {
	*x = CreateFileBaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFileBaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileBaseRequest) ProtoMessage() {}

func (x *CreateFileBaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileBaseRequest.ProtoReflect.Descriptor instead.
func (*CreateFileBaseRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{9}
}

func (x *CreateFileBaseRequest) GetAttrib() int64 {
	if x != nil {
		return x.Attrib
	}
	return 0
}

func (x *CreateFileBaseRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *CreateFileBaseRequest) GetSerialNo() int64 {
	if x != nil {
		return x.SerialNo
	}
	return 0
}

func (x *CreateFileBaseRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type CreateFileNewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attrib   int64  `protobuf:"varint,1,opt,name=attrib,proto3" json:"attrib,omitempty"`                     // 文件子类型
	Length   int64  `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`                     // 文件长度
	SerialNo int64  `protobuf:"varint,3,opt,name=serial_no,json=serialNo,proto3" json:"serial_no,omitempty"` // 序列号
	FileName string `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`  // 文件名 or URL
}

func (x *CreateFileNewsRequest) Reset() {
	*x = CreateFileNewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_haililive_haililive_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFileNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileNewsRequest) ProtoMessage() {}

func (x *CreateFileNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_haililive_haililive_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileNewsRequest.ProtoReflect.Descriptor instead.
func (*CreateFileNewsRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_haililive_haililive_proto_rawDescGZIP(), []int{10}
}

func (x *CreateFileNewsRequest) GetAttrib() int64 {
	if x != nil {
		return x.Attrib
	}
	return 0
}

func (x *CreateFileNewsRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *CreateFileNewsRequest) GetSerialNo() int64 {
	if x != nil {
		return x.SerialNo
	}
	return 0
}

func (x *CreateFileNewsRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

var File_protobuf_haililive_haililive_proto protoreflect.FileDescriptor

var file_protobuf_haililive_haililive_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x68, 0x61, 0x69, 0x6c, 0x69,
	0x6c, 0x69, 0x76, 0x65, 0x2f, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69,
	0x76, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa6, 0x03, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x33, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c,
	0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x02, 0x52, 0x08, 0x62, 0x75, 0x79, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x02, 0x52, 0x09, 0x62, 0x75, 0x79, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x02, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x22, 0xde, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x68, 0x69, 0x67,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x02, 0x52, 0x08, 0x62, 0x75, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x02, 0x52, 0x09, 0x62, 0x75, 0x79, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x02, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x22, 0x6e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x22, 0xca, 0x06, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x47, 0x52, 0x51,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x42, 0x47, 0x52, 0x51, 0x12, 0x10, 0x0a, 0x03,
	0x5a, 0x47, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x5a, 0x47, 0x42, 0x12, 0x10,
	0x0a, 0x03, 0x47, 0x4a, 0x47, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x47, 0x4a, 0x47,
	0x12, 0x14, 0x0a, 0x05, 0x46, 0x51, 0x46, 0x52, 0x47, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x46, 0x51, 0x46, 0x52, 0x47, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x52, 0x47, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x46, 0x52, 0x47, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x47, 0x53, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x42, 0x47, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x47,
	0x53, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x48, 0x47, 0x53, 0x12, 0x12, 0x0a, 0x04,
	0x4d, 0x51, 0x4c, 0x54, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x4d, 0x51, 0x4c, 0x54,
	0x12, 0x10, 0x0a, 0x03, 0x5a, 0x47, 0x47, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x5a,
	0x47, 0x47, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x32, 0x5a, 0x50, 0x47, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x41, 0x32, 0x5a, 0x50, 0x47, 0x12, 0x10, 0x0a, 0x03, 0x5a, 0x5a, 0x43, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x5a, 0x5a, 0x43, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x44,
	0x5a, 0x43, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x4c, 0x44, 0x5a, 0x43, 0x12, 0x12,
	0x0a, 0x04, 0x47, 0x44, 0x5a, 0x43, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x47, 0x44,
	0x5a, 0x43, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x58, 0x5a, 0x43, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x57, 0x58, 0x5a, 0x43, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x51, 0x54, 0x5a, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x43, 0x51, 0x54, 0x5a, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x44,
	0x46, 0x5a, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x4c, 0x44, 0x46, 0x5a, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x51, 0x46, 0x5a, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x43, 0x51,
	0x46, 0x5a, 0x12, 0x14, 0x0a, 0x05, 0x5a, 0x42, 0x47, 0x4a, 0x4a, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x5a, 0x42, 0x47, 0x4a, 0x4a, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x47, 0x47, 0x4a,
	0x4a, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x4d, 0x47, 0x47, 0x4a, 0x4a, 0x12, 0x12,
	0x0a, 0x04, 0x47, 0x44, 0x51, 0x59, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x47, 0x44,
	0x51, 0x59, 0x12, 0x12, 0x0a, 0x04, 0x5a, 0x59, 0x53, 0x52, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x5a, 0x59, 0x53, 0x52, 0x12, 0x12, 0x0a, 0x04, 0x5a, 0x59, 0x4c, 0x52, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x5a, 0x59, 0x4c, 0x52, 0x12, 0x12, 0x0a, 0x04, 0x51, 0x54,
	0x4c, 0x52, 0x18, 0x19, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x51, 0x54, 0x4c, 0x52, 0x12, 0x12,
	0x0a, 0x04, 0x59, 0x59, 0x4c, 0x52, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x59, 0x59,
	0x4c, 0x52, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x5a, 0x53, 0x59, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x54, 0x5a, 0x53, 0x59, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x54, 0x53, 0x52, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x42, 0x54, 0x53, 0x52, 0x12, 0x14, 0x0a, 0x05, 0x59, 0x59,
	0x57, 0x53, 0x5a, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x59, 0x59, 0x57, 0x53, 0x5a,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x4e, 0x53, 0x59, 0x54, 0x5a, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x53, 0x4e, 0x53, 0x59, 0x54, 0x5a, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x52, 0x5a, 0x45,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x4c, 0x52, 0x5a, 0x45, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x48, 0x4c, 0x52, 0x18, 0x20, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x53, 0x48, 0x4c, 0x52,
	0x12, 0x10, 0x0a, 0x03, 0x4a, 0x4c, 0x52, 0x18, 0x21, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x4a,
	0x4c, 0x52, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x46, 0x50, 0x4c, 0x52, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x57, 0x46, 0x50, 0x4c, 0x52, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x47, 0x57, 0x46,
	0x50, 0x18, 0x23, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x4d, 0x47, 0x57, 0x46, 0x50, 0x12, 0x12,
	0x0a, 0x04, 0x4d, 0x47, 0x53, 0x59, 0x18, 0x24, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x4d, 0x47,
	0x53, 0x59, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x47, 0x4a, 0x5a, 0x43, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x4d, 0x47, 0x4a, 0x5a, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x5a, 0x4d, 0x47,
	0x4a, 0x5a, 0x43, 0x18, 0x26, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x54, 0x5a, 0x4d, 0x47, 0x4a,
	0x5a, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x44, 0x51, 0x59, 0x42, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x47, 0x44, 0x51, 0x59, 0x42, 0x12, 0x16, 0x0a, 0x06, 0x4a, 0x5a, 0x43, 0x53,
	0x59, 0x4c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x4a, 0x5a, 0x43, 0x53, 0x59, 0x4c,
	0x22, 0x9c, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x22,
	0xad, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x98, 0x02, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x49,
	0x53, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f,
	0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x64, 0x42, 0x75, 0x79, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x67, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x22, 0x81, 0x01,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x84, 0x09, 0x0a, 0x10, 0x48, 0x61, 0x69, 0x4c, 0x69, 0x4c,
	0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x33, 0x12, 0x33, 0x2e, 0x68,
	0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x33, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x2f, 0x2e, 0x68, 0x61, 0x69, 0x6c,
	0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68,
	0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x69,
	0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x12, 0x31, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c,
	0x69, 0x76, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c,
	0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69,
	0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6d, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x32, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69,
	0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c,
	0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x75, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x36, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69,
	0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x68, 0x61,
	0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x49, 0x53, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x12, 0x38, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69,
	0x76, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x49, 0x53,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x34, 0x2e, 0x68, 0x61, 0x69,
	0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x33, 0x2e, 0x68,
	0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x33, 0x2e,
	0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x39, 0x5a, 0x37,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6d, 0x75, 0x74, 0x61,
	0x2f, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x3b, 0x68, 0x61,
	0x69, 0x6c, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_haililive_haililive_proto_rawDescOnce sync.Once
	file_protobuf_haililive_haililive_proto_rawDescData = file_protobuf_haililive_haililive_proto_rawDesc
)

func file_protobuf_haililive_haililive_proto_rawDescGZIP() []byte {
	file_protobuf_haililive_haililive_proto_rawDescOnce.Do(func() {
		file_protobuf_haililive_haililive_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_haililive_haililive_proto_rawDescData)
	})
	return file_protobuf_haililive_haililive_proto_rawDescData
}

var file_protobuf_haililive_haililive_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_protobuf_haililive_haililive_proto_goTypes = []interface{}{
	(*Response)(nil),                   // 0: haililive.protobuf.haililive.Response
	(*CreateReportV3Request)(nil),      // 1: haililive.protobuf.haililive.CreateReportV3Request
	(*CreateTickRequest)(nil),          // 2: haililive.protobuf.haililive.CreateTickRequest
	(*CreateMarketRequest)(nil),        // 3: haililive.protobuf.haililive.CreateMarketRequest
	(*CreateFinanceRequest)(nil),       // 4: haililive.protobuf.haililive.CreateFinanceRequest
	(*CreateFileHistoryRequest)(nil),   // 5: haililive.protobuf.haililive.CreateFileHistoryRequest
	(*CreateFileMinuteRequest)(nil),    // 6: haililive.protobuf.haililive.CreateFileMinuteRequest
	(*CreateFileHISMinuteRequest)(nil), // 7: haililive.protobuf.haililive.CreateFileHISMinuteRequest
	(*CreateFilePowerRequest)(nil),     // 8: haililive.protobuf.haililive.CreateFilePowerRequest
	(*CreateFileBaseRequest)(nil),      // 9: haililive.protobuf.haililive.CreateFileBaseRequest
	(*CreateFileNewsRequest)(nil),      // 10: haililive.protobuf.haililive.CreateFileNewsRequest
	(*timestamp.Timestamp)(nil),        // 11: google.protobuf.Timestamp
}
var file_protobuf_haililive_haililive_proto_depIdxs = []int32{
	11, // 0: haililive.protobuf.haililive.CreateReportV3Request.timestamp:type_name -> google.protobuf.Timestamp
	11, // 1: haililive.protobuf.haililive.CreateTickRequest.timestamp:type_name -> google.protobuf.Timestamp
	11, // 2: haililive.protobuf.haililive.CreateFileHistoryRequest.timestamp:type_name -> google.protobuf.Timestamp
	11, // 3: haililive.protobuf.haililive.CreateFileMinuteRequest.timestamp:type_name -> google.protobuf.Timestamp
	11, // 4: haililive.protobuf.haililive.CreateFileHISMinuteRequest.timestamp:type_name -> google.protobuf.Timestamp
	11, // 5: haililive.protobuf.haililive.CreateFilePowerRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 6: haililive.protobuf.haililive.HaiLiLiveService.CreateReportV3:input_type -> haililive.protobuf.haililive.CreateReportV3Request
	2,  // 7: haililive.protobuf.haililive.HaiLiLiveService.CreateTick:input_type -> haililive.protobuf.haililive.CreateTickRequest
	3,  // 8: haililive.protobuf.haililive.HaiLiLiveService.CreateMarket:input_type -> haililive.protobuf.haililive.CreateMarketRequest
	4,  // 9: haililive.protobuf.haililive.HaiLiLiveService.CreateFinance:input_type -> haililive.protobuf.haililive.CreateFinanceRequest
	5,  // 10: haililive.protobuf.haililive.HaiLiLiveService.CreateFileHistory:input_type -> haililive.protobuf.haililive.CreateFileHistoryRequest
	6,  // 11: haililive.protobuf.haililive.HaiLiLiveService.CreateFileMinute:input_type -> haililive.protobuf.haililive.CreateFileMinuteRequest
	7,  // 12: haililive.protobuf.haililive.HaiLiLiveService.CreateFileHISMinute:input_type -> haililive.protobuf.haililive.CreateFileHISMinuteRequest
	8,  // 13: haililive.protobuf.haililive.HaiLiLiveService.CreateFilePower:input_type -> haililive.protobuf.haililive.CreateFilePowerRequest
	9,  // 14: haililive.protobuf.haililive.HaiLiLiveService.CreateFileBase:input_type -> haililive.protobuf.haililive.CreateFileBaseRequest
	10, // 15: haililive.protobuf.haililive.HaiLiLiveService.CreateFileNews:input_type -> haililive.protobuf.haililive.CreateFileNewsRequest
	0,  // 16: haililive.protobuf.haililive.HaiLiLiveService.CreateReportV3:output_type -> haililive.protobuf.haililive.Response
	0,  // 17: haililive.protobuf.haililive.HaiLiLiveService.CreateTick:output_type -> haililive.protobuf.haililive.Response
	0,  // 18: haililive.protobuf.haililive.HaiLiLiveService.CreateMarket:output_type -> haililive.protobuf.haililive.Response
	0,  // 19: haililive.protobuf.haililive.HaiLiLiveService.CreateFinance:output_type -> haililive.protobuf.haililive.Response
	0,  // 20: haililive.protobuf.haililive.HaiLiLiveService.CreateFileHistory:output_type -> haililive.protobuf.haililive.Response
	0,  // 21: haililive.protobuf.haililive.HaiLiLiveService.CreateFileMinute:output_type -> haililive.protobuf.haililive.Response
	0,  // 22: haililive.protobuf.haililive.HaiLiLiveService.CreateFileHISMinute:output_type -> haililive.protobuf.haililive.Response
	0,  // 23: haililive.protobuf.haililive.HaiLiLiveService.CreateFilePower:output_type -> haililive.protobuf.haililive.Response
	0,  // 24: haililive.protobuf.haililive.HaiLiLiveService.CreateFileBase:output_type -> haililive.protobuf.haililive.Response
	0,  // 25: haililive.protobuf.haililive.HaiLiLiveService.CreateFileNews:output_type -> haililive.protobuf.haililive.Response
	16, // [16:26] is the sub-list for method output_type
	6,  // [6:16] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_protobuf_haililive_haililive_proto_init() }
func file_protobuf_haililive_haililive_proto_init() {
	if File_protobuf_haililive_haililive_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_haililive_haililive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_haililive_haililive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReportV3Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_haililive_haililive_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_haililive_haililive_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_haililive_haililive_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFinanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_haililive_haililive_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFileHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_haililive_haililive_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFileMinuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_haililive_haililive_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFileHISMinuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_haililive_haililive_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFilePowerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_haililive_haililive_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFileBaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_haililive_haililive_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFileNewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_haililive_haililive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_haililive_haililive_proto_goTypes,
		DependencyIndexes: file_protobuf_haililive_haililive_proto_depIdxs,
		MessageInfos:      file_protobuf_haililive_haililive_proto_msgTypes,
	}.Build()
	File_protobuf_haililive_haililive_proto = out.File
	file_protobuf_haililive_haililive_proto_rawDesc = nil
	file_protobuf_haililive_haililive_proto_goTypes = nil
	file_protobuf_haililive_haililive_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HaiLiLiveServiceClient is the client API for HaiLiLiveService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HaiLiLiveServiceClient interface {
	// 实时行情数据
	CreateReportV3(ctx context.Context, in *CreateReportV3Request, opts ...grpc.CallOption) (*Response, error)
	// 分笔交易数据
	CreateTick(ctx context.Context, in *CreateTickRequest, opts ...grpc.CallOption) (*Response, error)
	// 市场码表数据
	CreateMarket(ctx context.Context, in *CreateMarketRequest, opts ...grpc.CallOption) (*Response, error)
	// 金融财务信息
	CreateFinance(ctx context.Context, in *CreateFinanceRequest, opts ...grpc.CallOption) (*Response, error)
	// 文件: 历史交易 日线数据
	CreateFileHistory(ctx context.Context, in *CreateFileHistoryRequest, opts ...grpc.CallOption) (*Response, error)
	// 文件: 分钟线数据
	CreateFileMinute(ctx context.Context, in *CreateFileMinuteRequest, opts ...grpc.CallOption) (*Response, error)
	// 文件: 历史五分钟K线数据
	CreateFileHISMinute(ctx context.Context, in *CreateFileHISMinuteRequest, opts ...grpc.CallOption) (*Response, error)
	// 文件: 除权数据
	CreateFilePower(ctx context.Context, in *CreateFilePowerRequest, opts ...grpc.CallOption) (*Response, error)
	// 文件: 钱龙兼容基本资料文件
	CreateFileBase(ctx context.Context, in *CreateFileBaseRequest, opts ...grpc.CallOption) (*Response, error)
	// 文件: 新闻类
	CreateFileNews(ctx context.Context, in *CreateFileNewsRequest, opts ...grpc.CallOption) (*Response, error)
}

type haiLiLiveServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHaiLiLiveServiceClient(cc grpc.ClientConnInterface) HaiLiLiveServiceClient {
	return &haiLiLiveServiceClient{cc}
}

func (c *haiLiLiveServiceClient) CreateReportV3(ctx context.Context, in *CreateReportV3Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/haililive.protobuf.haililive.HaiLiLiveService/CreateReportV3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *haiLiLiveServiceClient) CreateTick(ctx context.Context, in *CreateTickRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/haililive.protobuf.haililive.HaiLiLiveService/CreateTick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *haiLiLiveServiceClient) CreateMarket(ctx context.Context, in *CreateMarketRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/haililive.protobuf.haililive.HaiLiLiveService/CreateMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *haiLiLiveServiceClient) CreateFinance(ctx context.Context, in *CreateFinanceRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/haililive.protobuf.haililive.HaiLiLiveService/CreateFinance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *haiLiLiveServiceClient) CreateFileHistory(ctx context.Context, in *CreateFileHistoryRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/haililive.protobuf.haililive.HaiLiLiveService/CreateFileHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *haiLiLiveServiceClient) CreateFileMinute(ctx context.Context, in *CreateFileMinuteRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/haililive.protobuf.haililive.HaiLiLiveService/CreateFileMinute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *haiLiLiveServiceClient) CreateFileHISMinute(ctx context.Context, in *CreateFileHISMinuteRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/haililive.protobuf.haililive.HaiLiLiveService/CreateFileHISMinute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *haiLiLiveServiceClient) CreateFilePower(ctx context.Context, in *CreateFilePowerRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/haililive.protobuf.haililive.HaiLiLiveService/CreateFilePower", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *haiLiLiveServiceClient) CreateFileBase(ctx context.Context, in *CreateFileBaseRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/haililive.protobuf.haililive.HaiLiLiveService/CreateFileBase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *haiLiLiveServiceClient) CreateFileNews(ctx context.Context, in *CreateFileNewsRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/haililive.protobuf.haililive.HaiLiLiveService/CreateFileNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HaiLiLiveServiceServer is the server API for HaiLiLiveService service.
type HaiLiLiveServiceServer interface {
	// 实时行情数据
	CreateReportV3(context.Context, *CreateReportV3Request) (*Response, error)
	// 分笔交易数据
	CreateTick(context.Context, *CreateTickRequest) (*Response, error)
	// 市场码表数据
	CreateMarket(context.Context, *CreateMarketRequest) (*Response, error)
	// 金融财务信息
	CreateFinance(context.Context, *CreateFinanceRequest) (*Response, error)
	// 文件: 历史交易 日线数据
	CreateFileHistory(context.Context, *CreateFileHistoryRequest) (*Response, error)
	// 文件: 分钟线数据
	CreateFileMinute(context.Context, *CreateFileMinuteRequest) (*Response, error)
	// 文件: 历史五分钟K线数据
	CreateFileHISMinute(context.Context, *CreateFileHISMinuteRequest) (*Response, error)
	// 文件: 除权数据
	CreateFilePower(context.Context, *CreateFilePowerRequest) (*Response, error)
	// 文件: 钱龙兼容基本资料文件
	CreateFileBase(context.Context, *CreateFileBaseRequest) (*Response, error)
	// 文件: 新闻类
	CreateFileNews(context.Context, *CreateFileNewsRequest) (*Response, error)
}

// UnimplementedHaiLiLiveServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHaiLiLiveServiceServer struct {
}

func (*UnimplementedHaiLiLiveServiceServer) CreateReportV3(context.Context, *CreateReportV3Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReportV3 not implemented")
}
func (*UnimplementedHaiLiLiveServiceServer) CreateTick(context.Context, *CreateTickRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTick not implemented")
}
func (*UnimplementedHaiLiLiveServiceServer) CreateMarket(context.Context, *CreateMarketRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMarket not implemented")
}
func (*UnimplementedHaiLiLiveServiceServer) CreateFinance(context.Context, *CreateFinanceRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFinance not implemented")
}
func (*UnimplementedHaiLiLiveServiceServer) CreateFileHistory(context.Context, *CreateFileHistoryRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFileHistory not implemented")
}
func (*UnimplementedHaiLiLiveServiceServer) CreateFileMinute(context.Context, *CreateFileMinuteRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFileMinute not implemented")
}
func (*UnimplementedHaiLiLiveServiceServer) CreateFileHISMinute(context.Context, *CreateFileHISMinuteRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFileHISMinute not implemented")
}
func (*UnimplementedHaiLiLiveServiceServer) CreateFilePower(context.Context, *CreateFilePowerRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFilePower not implemented")
}
func (*UnimplementedHaiLiLiveServiceServer) CreateFileBase(context.Context, *CreateFileBaseRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFileBase not implemented")
}
func (*UnimplementedHaiLiLiveServiceServer) CreateFileNews(context.Context, *CreateFileNewsRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFileNews not implemented")
}

func RegisterHaiLiLiveServiceServer(s *grpc.Server, srv HaiLiLiveServiceServer) {
	s.RegisterService(&_HaiLiLiveService_serviceDesc, srv)
}

func _HaiLiLiveService_CreateReportV3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReportV3Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaiLiLiveServiceServer).CreateReportV3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/haililive.protobuf.haililive.HaiLiLiveService/CreateReportV3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaiLiLiveServiceServer).CreateReportV3(ctx, req.(*CreateReportV3Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _HaiLiLiveService_CreateTick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTickRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaiLiLiveServiceServer).CreateTick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/haililive.protobuf.haililive.HaiLiLiveService/CreateTick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaiLiLiveServiceServer).CreateTick(ctx, req.(*CreateTickRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HaiLiLiveService_CreateMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaiLiLiveServiceServer).CreateMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/haililive.protobuf.haililive.HaiLiLiveService/CreateMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaiLiLiveServiceServer).CreateMarket(ctx, req.(*CreateMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HaiLiLiveService_CreateFinance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFinanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaiLiLiveServiceServer).CreateFinance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/haililive.protobuf.haililive.HaiLiLiveService/CreateFinance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaiLiLiveServiceServer).CreateFinance(ctx, req.(*CreateFinanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HaiLiLiveService_CreateFileHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaiLiLiveServiceServer).CreateFileHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/haililive.protobuf.haililive.HaiLiLiveService/CreateFileHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaiLiLiveServiceServer).CreateFileHistory(ctx, req.(*CreateFileHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HaiLiLiveService_CreateFileMinute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileMinuteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaiLiLiveServiceServer).CreateFileMinute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/haililive.protobuf.haililive.HaiLiLiveService/CreateFileMinute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaiLiLiveServiceServer).CreateFileMinute(ctx, req.(*CreateFileMinuteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HaiLiLiveService_CreateFileHISMinute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileHISMinuteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaiLiLiveServiceServer).CreateFileHISMinute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/haililive.protobuf.haililive.HaiLiLiveService/CreateFileHISMinute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaiLiLiveServiceServer).CreateFileHISMinute(ctx, req.(*CreateFileHISMinuteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HaiLiLiveService_CreateFilePower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFilePowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaiLiLiveServiceServer).CreateFilePower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/haililive.protobuf.haililive.HaiLiLiveService/CreateFilePower",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaiLiLiveServiceServer).CreateFilePower(ctx, req.(*CreateFilePowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HaiLiLiveService_CreateFileBase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileBaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaiLiLiveServiceServer).CreateFileBase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/haililive.protobuf.haililive.HaiLiLiveService/CreateFileBase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaiLiLiveServiceServer).CreateFileBase(ctx, req.(*CreateFileBaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HaiLiLiveService_CreateFileNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileNewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HaiLiLiveServiceServer).CreateFileNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/haililive.protobuf.haililive.HaiLiLiveService/CreateFileNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HaiLiLiveServiceServer).CreateFileNews(ctx, req.(*CreateFileNewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HaiLiLiveService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "haililive.protobuf.haililive.HaiLiLiveService",
	HandlerType: (*HaiLiLiveServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateReportV3",
			Handler:    _HaiLiLiveService_CreateReportV3_Handler,
		},
		{
			MethodName: "CreateTick",
			Handler:    _HaiLiLiveService_CreateTick_Handler,
		},
		{
			MethodName: "CreateMarket",
			Handler:    _HaiLiLiveService_CreateMarket_Handler,
		},
		{
			MethodName: "CreateFinance",
			Handler:    _HaiLiLiveService_CreateFinance_Handler,
		},
		{
			MethodName: "CreateFileHistory",
			Handler:    _HaiLiLiveService_CreateFileHistory_Handler,
		},
		{
			MethodName: "CreateFileMinute",
			Handler:    _HaiLiLiveService_CreateFileMinute_Handler,
		},
		{
			MethodName: "CreateFileHISMinute",
			Handler:    _HaiLiLiveService_CreateFileHISMinute_Handler,
		},
		{
			MethodName: "CreateFilePower",
			Handler:    _HaiLiLiveService_CreateFilePower_Handler,
		},
		{
			MethodName: "CreateFileBase",
			Handler:    _HaiLiLiveService_CreateFileBase_Handler,
		},
		{
			MethodName: "CreateFileNews",
			Handler:    _HaiLiLiveService_CreateFileNews_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/haililive/haililive.proto",
}
